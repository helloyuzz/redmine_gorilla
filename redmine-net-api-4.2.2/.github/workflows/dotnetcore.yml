name: Redmine .NET Api

on: 
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.gif'
      - '**/*.png'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - LICENSE
      - tests/*
    tags:
      - v[1-9].[0-9]+.[0-9]+
  pull_request:
  workflow_dispatch:  
    branches:
      - main
    path-ignore:
      - '**/*.md'
      - '**/*.gif'
      - '**/*.png'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - LICENSE
      - tests/*
    
env:
  DOTNET_CLI_TELEMETRY_OPTOUT:  1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
  DOTNET_MULTILEVEL_LOOKUP: 0

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dotnet: [ '3.1.x']
    name: OS ${{ matrix.os }} - dotnet ${{ matrix.dotnet }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
    # Fetches all tags for the repo
    - name: Fetch tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* 
     
    - name: Install dependencies
      run: dotnet restore redmine-net-api.sln
    
    - name: Get the version
      #id: get_version
      #run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      #${{ steps.get_version.outputs.VERSION }}
      run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    
    - name: Test
      run: |
          echo $VERSION
          echo ${{ env.VERSION }}
          echo $github.run_number
    
#     - name: Build
#       run: dotnet build redmine-net-api.sln --configuration Release --no-restore --version-suffix=${{ env.VERSION }}

#     - name: Build Signed
#       run: dotnet build redmine-net-api.sln --configuration Release --no-restore --version-suffix=${{ env.VERSION }} -p:Sign=true
      
#     #- name: Test
#     #  run: dotnet test redmine-net-api.sln --no-restore --verbosity normal

#     - name: Pack
#       run: dotnet pack redmine-net-api.sln --configuration Release -o .\artifacts --include-symbols -p:SymbolPackageFormat=snupkg --no-build ${{ env.VERSION }}
#       if: runner.os != 'Windows'

#     - name: Pack Signed
#       run: dotnet pack redmine-net-api.sln --configuration Release -o .\artifacts --include-symbols -p:SymbolPackageFormat=snupkg --no-build ${{ env.VERSION }} -p:Sign=true
#       if: runner.os != 'Windows'

#     - name: Publish NuGet Packages
#       uses: actions/upload-artifact@master
#       with:
#         name: nupkg
#         path: .\artifacts\**\*.nupkg

#     - name: Publish Symbol Packages
#       uses: actions/upload-artifact@master
#       with:
#         name: snupkg
#         path: .\artifacts\**\*.snupkg

#   deploy:
#     runs-on: macOS-latest
#     needs: build
#     name: Deploy Packages
#     steps:
#       - name: Download Package artifact
#         uses: actions/download-artifact@master
#         with:
#           name: nupkg
#       - name: Download Package artifact
#         uses: actions/download-artifact@master
#         with:
#           name: snupkg
     
#       - name: Setup NuGet
#         uses: NuGet/setup-nuget@v1.0.2
#         with:
#           nuget-api-key: ${{ secrets.NUGET_API_KEY }}
#           nuget-version: latest
 
#       - name: Setup .NET Core SDK
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: '3.1.x'

#       - name: Push to NuGet
#         run: dotnet nuget push nupkg\*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org
    
